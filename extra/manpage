.TH sshyp 1 "10 January 2022" "2021.12.01.fr2.3" "sshyp man page"
.SH NAME
sshyp \- A very simple self-hosted, synchronized password manager. Alternative to GNU pass. 
.SH SYNOPSIS
sshyp [OPTION] [[FLAG]] [/<entry name>]
.SH DESCRIPTION
sshyp is a lightweight password and note management program written in Python. sshyp is used via CLI and is self-hosted with a client-server model. sshyp expects that you have access to a personal server with a properly configured ssh server, ideally accepting remote connections.
.SH EXAMPLES
Setting up sshyp for the first time or altering its configuration (also recommended after major updates):
    sshyp tweak
    *follow the prompts

Reading an existing entry saved as ~/.password-pasture/development/github.gpg:
    sshyp /development/github

Copying the password of an existing entry saved as ~/.password-pasture/financial/bank.gpg:
    sshyp copy -p
    *answer the prompt with "/financial/bank"
    *enter decryption password

Editing the username of an existing entry saved as ~/.password-pasture/game.gpg:
    sshyp edit -u
    *answer the first prompt with "game"
    *follow the prompts

Making a new entry using the built-in password generator:
    sshyp gen
    *follow the prompts

Creating a note-only entry:
    sshyp add -n
    *follow the prompts

Syncing entries with the server:
    sshyp sync

.SH OPTIONS
In order to quickly read an existing entry, just run "sshyp </entry name>".

Options for other operations are as follows:

 help/--help/-h           bring up the help menu
 version/-v               display sshyp version info
 tweak                    configure sshyp
 add                      add an entry
 gen                      generate a new password
 edit                     edit an existing entry
 copy                     copy details of an entry to your clipboard
 shear/-rm                delete an existing entry
 sync/-s                  manually sync the entry directory via sshync
.SH FLAGS
add:
 password/-p             add a password entry
 note/-n                 add a note entry
 folder/-f               add a new folder for entries
edit:
 rename/relocate/-r      rename or relocate an entry
 username/-u             change the username of an entry
 password/-p             change the password of an entry
 note/-n                 change the note attached to an entry
 url/-l                  change the url attached to an entry
copy:
 username/-u             copy the username of an entry to your clipboard
 password/-p             copy the password of an entry to your clipboard
 url/-l                  copy the URL of an entry to your clipboard
 note/-n                 copy the note of an entry to your clipboard
gen:
 update/-u               generate a password for an existing entry
.SH BUGS
This is more of a current limitation than a bug, but:

Currently, if multiple clients are connected to a single server and a client deletes an entry, the entry is correctly deleted from the client and the server, but since the entry still exists on the other client, the next time it syncs the file will be re-uploaded. This will be fixed in an upcoming release of the syncing backend, sshync.
.SH AUTHOR
Randall Winkhart (https://github.com/rwinkhart)
